{"version":3,"file":"static/js/631.7c0c323a.chunk.js","mappings":"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","sources":["components/Modal/Modal.jsx","constants/apiConstants.js","webpack://ReactJS_FireSafety/./src/components/Cart/CartItem/CartItem.module.scss?0d66","components/Cart/CartItem/CartItem.jsx","webpack://ReactJS_FireSafety/./src/components/Cart/Cart.module.scss?5fb6","components/Cart/Cart.jsx","pages/CartPage.jsx","recoil/atoms.js"],"sourcesContent":["import './Modal.scss';\r\n\r\nfunction Modal({ isOpen, onClose, children }) {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal\" onClick={(e) => e.stopPropagation()}>\r\n        <button className=\"modal-close\" onClick={onClose}>&times;</button>\r\n        <div className=\"modal-content\">\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;","export const API_BASE_URL = 'http://109.71.247.179:8000';\r\nexport const PAYMENT_ENDPOINT = '/payment';\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cartItem\":\"CartItem_cartItem__DrKen\",\"itemDetails\":\"CartItem_itemDetails__OZ7nA\",\"quantityControl\":\"CartItem_quantityControl__H-0aB\",\"removeItemButton\":\"CartItem_removeItemButton__bott0\",\"itemTotal\":\"CartItem_itemTotal__ME1da\"};","import { useRecoilState } from 'recoil';\r\nimport { cartState } from './../../../recoil/atoms';\r\nimport styles from './CartItem.module.scss';\r\n\r\nconst CartItem = ({ item }) => {\r\n  const [cart, setCart] = useRecoilState(cartState);\r\n\r\n  // Функция для изменения количества через input\r\n  const handleQuantityInputChange = (e) => {\r\n    const newQuantity = parseInt(e.target.value, 10);\r\n    if (!isNaN(newQuantity) && newQuantity > 0) {\r\n      setCart((prevCart) =>\r\n        prevCart.map((cartItem) =>\r\n          cartItem.uniqueKey === item.uniqueKey ? { ...cartItem, quantity: newQuantity } : cartItem\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  // Функция для изменения количества при нажатии на + или -\r\n  const handleQuantityButtonClick = (newQuantity) => {\r\n    if (newQuantity > 0) {\r\n      setCart((prevCart) =>\r\n        prevCart.map((cartItem) =>\r\n          cartItem.uniqueKey === item.uniqueKey ? { ...cartItem, quantity: newQuantity } : cartItem\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleRemoveItem = () => {\r\n    setCart((prevCart) => prevCart.filter((cartItem) => cartItem.uniqueKey !== item.uniqueKey));\r\n  };\r\n\r\n  // Выбор цены в зависимости от количества товара\r\n  const price = (item.retailPrice || 0);\r\n  const applicablePrice = item.quantity * price >= 50000 ? (item.wholesalePrice || price) : price;\r\n\r\n  return (\r\n    <div className={styles.cartItem}>\r\n      <img src={item.productImage || 'https://www.magazin01.ru/upload/iblock/f32/qbz4ezesr4dh1pumjaztiv2zq5zir94b/Bezimeni_7.png'} alt={item.name} />\r\n      <div className={styles.itemDetails}>\r\n        <h3>{item.name}</h3>\r\n        <p>{applicablePrice.toFixed(2)} руб./шт</p>\r\n        <div className={styles.quantityControl}>\r\n          <button onClick={() => handleQuantityButtonClick(item.quantity - 1)} disabled={item.quantity <= 1}>-</button>\r\n          <input\r\n            type=\"number\"\r\n            value={item.quantity}\r\n            onChange={handleQuantityInputChange}\r\n            min=\"1\"\r\n          />\r\n          <button onClick={() => handleQuantityButtonClick(item.quantity + 1)}>+</button>\r\n        </div>\r\n        <button className={styles.removeItemButton} onClick={handleRemoveItem}>×</button>\r\n      </div>\r\n      <div className={styles.itemTotal}>\r\n        {(applicablePrice * item.quantity).toFixed(2)} руб.\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cart\":\"Cart_cart__J1-6c\",\"emptyCart\":\"Cart_emptyCart__neeJu\",\"emptyCartIcon\":\"Cart_emptyCartIcon__JefUk\",\"continueShopping\":\"Cart_continueShopping__+PYX3\",\"cartActions\":\"Cart_cartActions__jdSQ1\",\"clearCartButton\":\"Cart_clearCartButton__1a4kn\",\"cartItems\":\"Cart_cartItems__aoJ-N\",\"cartSummary\":\"Cart_cartSummary__dSQEp\",\"formFields\":\"Cart_formFields__NvW46\",\"formField\":\"Cart_formField__r42qG\",\"invalidField\":\"Cart_invalidField__hLfnx\",\"errorMessage\":\"Cart_errorMessage__Jn7BI\",\"checkoutButton\":\"Cart_checkoutButton__esN7R\",\"modal_actions\":\"Cart_modal_actions__HyCM4\",\"button_cart\":\"Cart_button_cart__osoQs\",\"clientTypeSelector\":\"Cart_clientTypeSelector__6Iuee\",\"active\":\"Cart_active__mO-Tl\",\"fadeIn\":\"Cart_fadeIn__8DIUE\",\"modalIn\":\"Cart_modalIn__2vdWY\"};","import { useState, useEffect } from 'react';\r\nimport { useRecoilState } from 'recoil';\r\nimport axios from 'axios';\r\nimport { cartState } from './../../recoil/atoms';\r\nimport CartItem from './CartItem/CartItem';\r\nimport styles from './Cart.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { API_BASE_URL, PAYMENT_ENDPOINT } from '../../constants/apiConstants';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Modal from '../Modal/Modal';\r\n\r\nconst Cart = () => {\r\n  const [cart, setCart] = useRecoilState(cartState);\r\n  const [email, setEmail] = useState('');\r\n  const [isEmailValid, setIsEmailValid] = useState(true);\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [patronymic, setPatronymic] = useState('');\r\n  const [deliveryAddress, setDeliveryAddress] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [isPhoneValid, setIsPhoneValid] = useState(true);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [orderStatus, setOrderStatus] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [clientType, setClientType] = useState('physical');\r\n  const [inn, setInn] = useState('');\r\n\r\n  const openModal = () => setShowModal(true);\r\n  const closeModal = () => setShowModal(false);\r\n\r\n  const handlePaymentConfirm = () => {\r\n    createPayment(); // Выполнение платежа\r\n    closeModal(); // Закрытие модалки\r\n  };\r\n\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      setCart(JSON.parse(savedCart));\r\n    }\r\n\r\n    // Восстановление информации из локального хранилища\r\n    const savedEmail = localStorage.getItem('email');\r\n    const savedFirstName = localStorage.getItem('firstName');\r\n    const savedLastName = localStorage.getItem('lastName');\r\n    const savedPatronymic = localStorage.getItem('patronymic');\r\n    const savedDeliveryAddress = localStorage.getItem('deliveryAddress');\r\n    const savedPhone = localStorage.getItem('phone');\r\n    const savedClientType = localStorage.getItem('clientType');\r\n    const savedInn = localStorage.getItem('inn');\r\n    if (savedEmail) {\r\n      setEmail(savedEmail);\r\n      setIsEmailValid(validateEmail(savedEmail));\r\n    }\r\n    if (savedClientType) setClientType(savedClientType);\r\n    if (savedInn) setInn(savedInn);\r\n    if (savedFirstName) setFirstName(savedFirstName);\r\n    if (savedLastName) setLastName(savedLastName);\r\n    if (savedPatronymic) setPatronymic(savedPatronymic);\r\n    if (savedDeliveryAddress) setDeliveryAddress(savedDeliveryAddress);\r\n    if (savedPhone) {\r\n      setPhone(savedPhone);\r\n      setIsPhoneValid(validatePhone(savedPhone));\r\n    }\r\n\r\n    const paymentId = localStorage.getItem('paymentId');\r\n    if (paymentId) {\r\n      checkOrderStatus();\r\n    }\r\n  }, [setCart]);\r\n\r\n  const totalPrice = cart.reduce((sum, item) => {\r\n    const price = item.retailPrice || 0;\r\n    const applicablePrice = item.quantity * price >= 50000 ? (item.wholesalePrice || price) : price;\r\n    return sum + applicablePrice * item.quantity;\r\n  }, 0);\r\n\r\n  const clearCart = () => {\r\n    setCart([]);\r\n    localStorage.removeItem('cart');\r\n    localStorage.removeItem('orderUuid');\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('firstName');\r\n    localStorage.removeItem('lastName');\r\n    localStorage.removeItem('patronymic');\r\n    localStorage.removeItem('deliveryAddress');\r\n    localStorage.removeItem('phone');\r\n    localStorage.removeItem('inn');\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    const newEmail = e.target.value;\r\n    setEmail(newEmail);\r\n    setIsEmailValid(validateEmail(newEmail));\r\n    localStorage.setItem('email', newEmail);\r\n  };\r\n  const handleFirstNameChange = (e) => {\r\n    setFirstName(e.target.value);\r\n    localStorage.setItem('firstName', e.target.value);\r\n  };\r\n\r\n  const handleLastNameChange = (e) => {\r\n    setLastName(e.target.value);\r\n    localStorage.setItem('lastName', e.target.value);\r\n  };\r\n\r\n  const handlePatronymicChange = (e) => {\r\n    setPatronymic(e.target.value);\r\n    localStorage.setItem('patronymic', e.target.value);\r\n  };\r\n\r\n  const handleInnChange = (e) => {\r\n    setInn(e.target.value);\r\n    localStorage.setItem('inn', e.target.value);\r\n  };\r\n\r\n  const handleDeliveryAddressChange = (e) => {\r\n    setDeliveryAddress(e.target.value);\r\n    localStorage.setItem('deliveryAddress', e.target.value);\r\n  };\r\n\r\n  const handlePhoneChange = (e) => {\r\n    const value = e.target.value;\r\n\r\n  // Разрешаем только цифры и символ \"+\"\r\n  const formattedValue = value.replace(/[^0-9+]/g, ''); \r\n\r\n  // Проверяем, что номер начинается с +7 или 8 и имеет правильную длину\r\n  setPhone(formattedValue);\r\n  setIsPhoneValid(validatePhone(formattedValue));\r\n  localStorage.setItem('phone', formattedValue);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return re.test(email);\r\n  };\r\n\r\n  const validatePhone = (phone) => {\r\n    const re = /^(\\+7|8)\\d{10}$/;\r\n    return re.test(phone);\r\n  };\r\n\r\n  const createPayment = async () => {\r\n    if (!isEmailValid || !email || !firstName || !lastName || !deliveryAddress || !isPhoneValid || !phone) {\r\n      setError('Пожалуйста, заполните все поля правильно');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setError('');\r\n\r\n    try {\r\n      let orderUuid = uuidv4();\r\n      localStorage.setItem('orderUuid', orderUuid);\r\n\r\n      const response = await axios.post(`${API_BASE_URL}${PAYMENT_ENDPOINT}/${orderUuid}`, {\r\n        amount: {\r\n          currency: 'RUB',\r\n          value: totalPrice.toFixed(2),\r\n        },\r\n        description: `Оплата заказа ${orderUuid}`,\r\n      });\r\n\r\n      const paymentId = response.data.id;\r\n      localStorage.setItem('paymentId', paymentId);\r\n\r\n      window.location.href = response.data.confirmation.confirmation_url;\r\n    } catch (error) {\r\n      console.error('Ошибка при создании платежа:', error);\r\n      setError('Произошла ошибка при создании платежа');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const [emailSent, setEmailSent] = useState(false); // Флаг для отслеживания отправки письма\r\n\r\nconst checkOrderStatus = async () => {\r\n  const paymentId = localStorage.getItem('paymentId');\r\n  const savedEmail = localStorage.getItem('email');\r\n  const savedFirstName = localStorage.getItem('firstName');\r\n  const savedLastName = localStorage.getItem('lastName');\r\n  const savedPatronymic = localStorage.getItem('patronymic');\r\n  const savedDeliveryAddress = localStorage.getItem('deliveryAddress');\r\n  const savedPhone = localStorage.getItem('phone');\r\n  const savedInn = localStorage.getItem('inn') ?? '-';\r\n  \r\n  if (!paymentId) {\r\n    setError('ID платежа не найден.');\r\n    return;\r\n  }\r\n\r\n  setIsLoading(true);\r\n  setError('');\r\n\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}${PAYMENT_ENDPOINT}/${paymentId}`);\r\n    setOrderStatus(response.data.status);\r\n\r\n    if (response.data.status === 'succeeded' && !emailSent) { // Проверка флага emailSent\r\n      setEmailSent(true); // Устанавливаем флаг, чтобы не отправить письмо повторно\r\n      await sendOrderConfirmation(savedEmail, savedFirstName, \r\n        savedLastName, savedPatronymic, savedDeliveryAddress, \r\n        savedPhone,savedInn, cart);\r\n      clearCart();\r\n    }\r\n  } catch (error) {\r\n    console.error('Ошибка при проверке статуса заказа:', error);\r\n    setError('Произошла ошибка при проверке статуса заказа');\r\n  } finally {\r\n    setIsLoading(false);\r\n  }\r\n};\r\n  \r\n  const sendOrderConfirmation = async (email, firstname, surname, \r\n    patronymic, deliveryAddress, phone,inn, cartItems) => {\r\n    const emailData = {\r\n      recipient_email: email,\r\n      subject: 'Подтверждение заказа',\r\n      items: cartItems.map(item => ({\r\n        name: item.name,\r\n        cost: item.retailPrice || item.wholesalePrice || 0,\r\n        count: item.quantity\r\n      })),\r\n      firstname,\r\n      surname,\r\n      patronymic,\r\n      address: deliveryAddress,\r\n      phone,\r\n      inn,\r\n    };\r\n  \r\n    try {\r\n      // Отправка email только один раз\r\n      const resp = await axios.post(`${API_BASE_URL}/mailing/send-email/`, emailData);\r\n    } catch (error) {\r\n      console.error('Ошибка при отправке подтверждения заказа:', error);\r\n    } finally {\r\n      localStorage.removeItem('paymentId'); // Очистка paymentId после отправки письма\r\n    }\r\n  };\r\n  \r\n\r\n  if (orderStatus === 'succeeded') {\r\n    return (\r\n      <div className={styles.cart}>\r\n        <h2>Заказ успешно оплачен</h2>\r\n        <p>Спасибо за ваш заказ! Подтверждение отправлено на ваш email.</p>\r\n        <Link to=\"/catalog\" className={styles.continueShopping}>Вернуться в каталог</Link>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles.cart}>\r\n      <h2>Корзина</h2>\r\n      {cart.length === 0 ? (\r\n        <div className={styles.emptyCart}>\r\n          <div className={styles.emptyCartIcon}>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\" width=\"80\" height=\"80\">\r\n              <path d=\"M7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2zM1 2v2h2l3.6 7.59-1.35 2.45c-.16.28-.25.61-.25.96 0 1.1.9 2 2 2h12v-2H7.42c-.14 0-.25-.11-.25-.25l.03-.12.9-1.63h7.45c.75 0 1.41-.41 1.75-1.03l3.58-6.49A1.003 1.003 0 0020 4H5.21l-.94-2H1zm16 16c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2z\"/>\r\n            </svg>\r\n          </div>\r\n          <p>Ваша корзина пуста</p>\r\n          <Link to=\"/catalog\" className={styles.continueShopping}>Нажмите здесь, чтобы продолжить покупки</Link>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className={styles.cartActions}>\r\n            <button className={styles.clearCartButton} onClick={clearCart}>Очистить корзину</button>\r\n          </div>\r\n          <div className={styles.cartItems}>\r\n            {cart.map((item) => (\r\n              <CartItem \r\n                key={item.uniqueKey} \r\n                item={item} \r\n              />\r\n            ))}\r\n          </div>\r\n          <div className={styles.cartSummary}>\r\n            <span>Итого:</span>\r\n            <span>{totalPrice.toFixed(2)} руб.</span>\r\n          </div>\r\n          <div className={styles.clientTypeSelector}>\r\n  <button \r\n    type=\"button\"\r\n    className={clientType === 'physical' ? styles.active : ''}\r\n    onClick={() => setClientType('physical')}\r\n  >\r\n    Физическое лицо\r\n  </button>\r\n  <button\r\n    type=\"button\" \r\n    className={clientType === 'legal' ? styles.active : ''}\r\n    onClick={() => setClientType('legal')}\r\n  >\r\n    Юридическое лицо\r\n  </button>\r\n</div>\r\n          <div className={styles.formFields}>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={handleEmailChange}\r\n                placeholder=\"Введите email для чека\"\r\n                className={!isEmailValid ? styles.invalidField : ''}\r\n              />\r\n              {!isEmailValid && <span className={styles.errorMessage}>Некорректный email</span>}\r\n            </div> {clientType === 'legal' && (\r\n    <div className={styles.formField}>\r\n      <label htmlFor=\"inn\">ИНН:</label>\r\n      <input\r\n        type=\"text\"\r\n        id=\"inn\"\r\n        value={inn}\r\n        onChange={handleInnChange}\r\n        placeholder=\"Введите ИНН\"\r\n        required\r\n      />\r\n    </div>\r\n  )}\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"firstName\">Имя:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"firstName\"\r\n                value={firstName}\r\n                onChange={handleFirstNameChange}\r\n                placeholder=\"Введите имя\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"lastName\">Фамилия:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"lastName\"\r\n                value={lastName}\r\n                onChange={handleLastNameChange}\r\n                placeholder=\"Введите фамилию\"\r\n                required\r\n              />\r\n            </div>\r\n            \r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"patronymic\">Отчество:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"patronymic\"\r\n                value={patronymic}\r\n                onChange={handlePatronymicChange}\r\n                placeholder=\"Введите отчество\"\r\n              />\r\n            </div>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"deliveryAddress\">Адрес доставки:</label>\r\n              <select\r\n                id=\"deliveryAddress\"\r\n                value={deliveryAddress}\r\n                onChange={handleDeliveryAddressChange}\r\n                required\r\n              >\r\n                <option value=\"\">Выберите пункт доставки</option>\r\n                <option value=\"Пункт выдачи Минеральные воды, ул. Новосёлов, 9А\">Пункт выдачи Минеральные воды, ул. Новосёлов, 9А</option>\r\n                <option value=\"Пункт выдачи Пятигорск, ул. Украинская, 34\">Пункт выдачи Пятигорск, ул. Украинская, 34</option>\r\n                <option value=\"г. Ессентуки, ул. Советская, 67А\">г. Ессентуки, ул. Советская, 67А</option>\r\n              </select>\r\n            </div>\r\n            <div className={styles.formField}>\r\n              <label htmlFor=\"phone\">Номер телефона:</label>\r\n              <input\r\n                type=\"tel\"\r\n                id=\"phone\"\r\n                value={phone}\r\n                onChange={handlePhoneChange}\r\n                placeholder=\"Введите номер телефона\"\r\n                className={!isPhoneValid ? styles.invalidField : ''}\r\n                required\r\n              />\r\n              {!isPhoneValid && <span className={styles.errorMessage}>Номер телефона должен начинаться с +7 или 8 и содержать 10 цифр после кода</span>}\r\n            </div>\r\n          </div>\r\n          <button \r\n            className={styles.checkoutButton} \r\n            onClick={openModal}\r\n            disabled={isLoading || !isEmailValid || !email || !firstName || !lastName || !deliveryAddress || !isPhoneValid || !phone}\r\n          >\r\n            {isLoading ? 'Загрузка...' : 'Перейти к оплате'}\r\n          </button>\r\n          {error && <div className={styles.errorMessage}>{error}</div>}\r\n          <Modal \r\n        isOpen={showModal} \r\n        onClose={closeModal} // Передаем функцию для закрытия модалки\r\n      >\r\n        <h2>Пожалуйста, завершите оплату</h2>\r\n        <p>Перед тем как продолжить, убедитесь, что:</p>\r\n        <ul>\r\n          <li>Вы вернулись на страницу корзины после оплаты.</li>\r\n          <li>Проверьте наличие письма с чеком на указанный email.</li>\r\n        </ul>\r\n        <div className={styles.modal_actions}>\r\n          <button className={styles.button_cart} onClick={handlePaymentConfirm}>Подтвердить оплату</button>\r\n          <button className={styles.button_cart} onClick={closeModal}>Отмена</button>\r\n        </div>\r\n      </Modal>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;","import Cart from \"./../components/Cart/Cart\"\r\n\r\nconst CartPage = () => {\r\n    return <Cart />\r\n}\r\n\r\nexport default CartPage;","import { atom, DefaultValue } from 'recoil';\r\n\r\nconst localStorageEffect = key => ({setSelf, onSet}) => {\r\n  const savedValue = localStorage.getItem(key)\r\n  if (savedValue != null) {\r\n    setSelf(JSON.parse(savedValue));\r\n  }\r\n\r\n  onSet((newValue) => {\r\n    if (newValue instanceof DefaultValue) {\r\n      localStorage.removeItem(key);\r\n    } else {\r\n      localStorage.setItem(key, JSON.stringify(newValue));\r\n    }\r\n  });\r\n};\r\n\r\nexport const cartState = atom({\r\n  key: 'cartState',\r\n  default: [],\r\n  effects: [\r\n    localStorageEffect('cart')\r\n  ]\r\n});"],"names":["_ref","isOpen","onClose","children","_jsx","className","onClick","_jsxs","e","stopPropagation","API_BASE_URL","PAYMENT_ENDPOINT","item","cart","setCart","useRecoilState","cartState","handleQuantityButtonClick","newQuantity","prevCart","map","cartItem","uniqueKey","quantity","price","retailPrice","applicablePrice","wholesalePrice","styles","src","productImage","alt","name","toFixed","disabled","type","value","onChange","parseInt","target","isNaN","min","handleRemoveItem","filter","Cart","email","setEmail","useState","isEmailValid","setIsEmailValid","firstName","setFirstName","lastName","setLastName","patronymic","setPatronymic","deliveryAddress","setDeliveryAddress","phone","setPhone","isPhoneValid","setIsPhoneValid","isLoading","setIsLoading","error","setError","orderStatus","setOrderStatus","showModal","setShowModal","clientType","setClientType","inn","setInn","closeModal","useEffect","savedCart","localStorage","getItem","JSON","parse","savedEmail","savedFirstName","savedLastName","savedPatronymic","savedDeliveryAddress","savedPhone","savedClientType","savedInn","validateEmail","validatePhone","checkOrderStatus","totalPrice","reduce","sum","clearCart","removeItem","test","createPayment","async","orderUuid","uuidv4","setItem","response","axios","post","concat","amount","currency","description","paymentId","data","id","window","location","href","confirmation","confirmation_url","console","emailSent","setEmailSent","_localStorage$getItem","get","status","sendOrderConfirmation","firstname","surname","cartItems","emailData","recipient_email","subject","items","cost","count","address","Link","to","length","xmlns","viewBox","fill","width","height","d","_Fragment","CartItem","htmlFor","newEmail","placeholder","required","formattedValue","replace","openModal","Modal","handlePaymentConfirm","CartPage","atom","key","default","effects","setSelf","onSet","savedValue","newValue","DefaultValue","stringify"],"sourceRoot":""}