{"version":3,"file":"static/js/768.8e05a596.chunk.js","mappings":"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","sources":["components/Breadcrumbs/Breadcrumbs.jsx","webpack://ReactJS_FireSafety/./src/components/Services/Services.module.scss?9a7a","components/Services/Services.jsx","pages/ServicesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\r\nimport './Breadcrumbs.scss';\r\nimport priceList from '../../data/priceList';\r\nimport { services } from '../../data/servicesList'; // Импортируем список услуг\r\n\r\nconst Breadcrumbs = () => {\r\n  const location = useLocation();\r\n  const pathnames = location.pathname.split('/').filter((x) => x);\r\n\r\n  const breadcrumbNameMap = {\r\n    'catalog': 'Каталог',\r\n    'services': 'Услуги',\r\n    'contacts': 'Контакты',\r\n  };\r\n\r\n  const getCategoryName = (categoryPath) => {\r\n    const category = priceList.find(cat => cat.linkTo === categoryPath);\r\n    return category ? category.category : '';\r\n  };\r\n\r\n  const getItemName = (categoryPath, itemId) => {\r\n    const category = priceList.find(cat => cat.linkTo === categoryPath);\r\n    if (category) {\r\n      const item = category.items.find(item => item.id === parseInt(itemId));\r\n      return item ? item.name : '';\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const getServiceName = (servicePath) => {\r\n    const service = services.find(s => s.linkTo === `/services/${servicePath}`);\r\n    return service ? service.name : '';\r\n  };\r\n\r\n  return (\r\n    <nav className=\"breadcrumbs\">\r\n      {pathnames.length > 0 && <Link to=\"/\">Главная</Link>}\r\n      {pathnames.map((name, index) => {\r\n        const routeTo = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n        const isLast = index === pathnames.length - 1;\r\n\r\n        let breadcrumbName = breadcrumbNameMap[name] || name;\r\n\r\n        if (pathnames[0] === 'catalog' && index === 1) {\r\n          const categoryPath = `/${pathnames.slice(0, index + 1).join('/')}`;\r\n          breadcrumbName = getCategoryName(categoryPath);\r\n        }\r\n\r\n        if (pathnames[0] === 'catalog' && index === 2) {\r\n          const categoryPath = `/${pathnames.slice(0, index).join('/')}`;\r\n          breadcrumbName = getItemName(categoryPath, name);\r\n        }\r\n\r\n        if (pathnames[0] === 'services' && index === 1) {\r\n          breadcrumbName = getServiceName(name);\r\n        }\r\n\r\n        return isLast ? (\r\n          <span key={name}>{breadcrumbName}</span>\r\n        ) : (\r\n          <Link key={name} to={routeTo}>\r\n            {breadcrumbName}\r\n          </Link>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Breadcrumbs;","// extracted by mini-css-extract-plugin\nexport default {\"servicesContainer\":\"Services_servicesContainer__iHmOS\",\"title\":\"Services_title__CLCpz\",\"servicesGrid\":\"Services_servicesGrid__nfHBk\",\"card\":\"Services_card__sp1-t\",\"cardImage\":\"Services_cardImage__Z0yVB\",\"cardContent\":\"Services_cardContent__KLx6d\",\"cardTitle\":\"Services_cardTitle__TTkzA\",\"cardDescription\":\"Services_cardDescription__BZMR0\"};","import { Link } from 'react-router-dom';\r\nimport styles from './Services.module.scss';\r\nimport { services } from './../../data/servicesList';\r\n\r\nconst ServiceCard = ({ service }) => (\r\n  <Link to={service.linkTo} className={styles.card}>\r\n    <img src={service.imageSrc || '/placeholder-image.jpg'} alt={service.name} className={styles.cardImage} />\r\n    <div className={styles.cardContent}>\r\n      <h3 className={styles.cardTitle}>{service.name}</h3>\r\n      <p className={styles.cardDescription}>{service.shortDescription}</p>\r\n    </div>\r\n  </Link>\r\n);\r\n\r\nconst Services = () => {\r\n  return (\r\n    <div className={styles.servicesContainer}>\r\n      <h1 className={styles.title}>Услуги</h1>\r\n      <div className={styles.servicesGrid}>\r\n        {services.map(service => (\r\n          <ServiceCard key={service.id} service={service} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Services;","import Breadcrumbs from \"../components/Breadcrumbs/Breadcrumbs\";\r\nimport Services from \"../components/Services/Services\";\r\n\r\nconst ServicesPage = () => {\r\n    return <>\r\n        <Breadcrumbs />\r\n        <Services />\r\n    </>\r\n}\r\n\r\nexport default ServicesPage;"],"names":["Breadcrumbs","pathnames","useLocation","pathname","split","filter","x","breadcrumbNameMap","_jsxs","className","children","length","_jsx","Link","to","map","name","index","routeTo","concat","slice","join","isLast","breadcrumbName","categoryPath","category","priceList","find","cat","linkTo","getCategoryName","getItemName","itemId","item","items","id","parseInt","servicePath","service","services","s","getServiceName","ServiceCard","_ref","styles","src","imageSrc","alt","shortDescription","Services","ServicesPage","_Fragment"],"sourceRoot":""}